version: '3.7'


services:
  nginx:
    image: opentracing/nginx-opentracing
    depends_on:
      - envoy
    networks:
      trivial_example:
        aliases:
          - nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/datadog-config.json:/etc/datadog-config.json
    expose:
      - "8080"
    ports:
      - "8080:8080"

  go-service:
    build:
      context: .
      dockerfile: ./Dockerfile
    networks:
      trivial_example:
        aliases:
          - go-service
    expose:
      - "9001"
    ports:
      - "9001:9001"
    environment:
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_ANALYTICS_ENABLED=true

  scala-akka-service:
    depends_on:
      - dd-agent
    build:
      context: ./scala-akka/
    networks:
      trivial_example:
        aliases:
          - scala-akka-service
    expose:
      - "8090"
      - "8091"
      - "8092"
    ports:
      - "8090:8090" # HTTP Port
      - "8091:8091" # Debug port
      - "8092:8092" # JMX Port
    environment:
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_ANALYTICS_ENABLED=true

  sinatra-service:
    image: "ruby:2.5.3"
    expose:
      - "5000"
    ports:
      - "5000:5000"
    environment:
      - DD_AGENT_HOST=dd-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_ANALYTICS_ENABLED=true
    networks:
      trivial_example:
        aliases:
          - sinatra-service
    volumes:
      - ./sinatra-service:/workdir
    working_dir: /workdir
    command: bash -c "bundle install && foreman start"

  envoy:
    image: envoyproxy/envoy:latest
    depends_on:
      - sinatra-service
      - go-service
      - scala-akka-service
    expose:
      - "3000"
      - "3001"
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      trivial_example:
        aliases:
          - envoy
    command: bash -c "envoy --config-path /etc/envoy/envoy.yaml"

  dd-agent:
    image: 'datadog/agent'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/proc/:/host/proc/:ro'
      - '/sys/fs/cgroup/:/host/sys/fs/cgroup:ro'
    environment:
      - 'DD_API_KEY=${DD_API_KEY}'
      - 'DD_APM_ENABLED=true'
      - 'DD_APM_NON_LOCAL_TRAFFIC=true'
      - 'DD_LOGS_ENABLED=true'
      - 'DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true'
      - 'DD_AC_EXCLUDE="name:datadog-agent"'
      - 'DD_LOG_LEVEL=WARN'
    networks:
      trivial_example:
        aliases:
          - dd-agent
    expose:
      - "8125"
      - "8126"
    ports:
      - "8126:8126"
      - "8125:8125"

networks:
  trivial_example:
    ipam:
      driver: default
